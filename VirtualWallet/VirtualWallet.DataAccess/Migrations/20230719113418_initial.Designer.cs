// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualWallet.DataAccess;

#nullable disable

namespace VirtualWallet.DataAccess.Migrations
{
    [DbContext(typeof(WalletDbContext))]
    [Migration("20230719113418_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VirtualWallet.DataAccess.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Blocked"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("VirtualWallet.DataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("WalletId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "gosho@gmail.com",
                            FirstName = "Georgi",
                            LastName = "Georgiev",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "goshoXx123",
                            WalletId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "Barekov@gmail.com",
                            FirstName = "Nikolai",
                            LastName = "Barekov",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "BarekaXx123",
                            WalletId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "Uzunkata@gmail.com",
                            FirstName = "Shtilian",
                            LastName = "Uzunov",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "Uzunkata",
                            WalletId = 3
                        },
                        new
                        {
                            Id = 4,
                            Email = "Cvetan@gmail.com",
                            FirstName = "Vladislav",
                            LastName = "Cvetanov",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "Cvete123",
                            WalletId = 4
                        },
                        new
                        {
                            Id = 5,
                            Email = "Kostev@gmail.com",
                            FirstName = "Kosta",
                            LastName = "Kostev",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "BrainDamage123",
                            WalletId = 5
                        },
                        new
                        {
                            Id = 6,
                            Email = "Admin@gmail.com",
                            FirstName = "Admin",
                            LastName = "Adminov",
                            Password = "MTIz",
                            RoleId = 3,
                            Username = "Admin",
                            WalletId = 6
                        },
                        new
                        {
                            Id = 7,
                            Email = "Andrea@gmail.com",
                            FirstName = "Andrea",
                            LastName = "Paynera",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "TopAndreika",
                            WalletId = 7
                        },
                        new
                        {
                            Id = 8,
                            Email = "Emanuela@gmail.com",
                            FirstName = "Emanuela",
                            LastName = "Paynera",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "TopEmanuelka",
                            WalletId = 8
                        },
                        new
                        {
                            Id = 9,
                            Email = "Katrin@gmail.com",
                            FirstName = "Katrin",
                            LastName = "lilova",
                            Password = "MTIz",
                            RoleId = 2,
                            Username = "Katrin",
                            WalletId = 9
                        });
                });

            modelBuilder.Entity("VirtualWallet.DataAccess.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("BGN")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("CHF")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("EUR")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("GBP")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("USD")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Wallet");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BGN = 0m,
                            CHF = 0m,
                            EUR = 0m,
                            GBP = 0m,
                            USD = 0m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BGN = 0m,
                            CHF = 0m,
                            EUR = 0m,
                            GBP = 0m,
                            USD = 0m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BGN = 0m,
                            CHF = 0m,
                            EUR = 0m,
                            GBP = 0m,
                            USD = 0m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            BGN = 0m,
                            CHF = 0m,
                            EUR = 0m,
                            GBP = 0m,
                            USD = 0m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BGN = 0m,
                            CHF = 0m,
                            EUR = 0m,
                            GBP = 0m,
                            USD = 0m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            BGN = 0m,
                            CHF = 0m,
                            EUR = 0m,
                            GBP = 0m,
                            USD = 0m,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            BGN = 0m,
                            CHF = 0m,
                            EUR = 0m,
                            GBP = 0m,
                            USD = 0m,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            BGN = 0m,
                            CHF = 0m,
                            EUR = 0m,
                            GBP = 0m,
                            USD = 0m,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            BGN = 0m,
                            CHF = 0m,
                            EUR = 0m,
                            GBP = 0m,
                            USD = 0m,
                            UserId = 9
                        });
                });

            modelBuilder.Entity("VirtualWallet.DataAccess.Models.User", b =>
                {
                    b.HasOne("VirtualWallet.DataAccess.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VirtualWallet.DataAccess.Models.Wallet", "Wallet")
                        .WithOne("User")
                        .HasForeignKey("VirtualWallet.DataAccess.Models.User", "WalletId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("VirtualWallet.DataAccess.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("VirtualWallet.DataAccess.Models.Wallet", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
