@using System.Text;

@model VirtualWallet.Dto.ViewModels.TransferViewModels.PaginatedTransfersViewModel

@{
    int? userId = this.ViewBag.Id;
}

<div class="flex justify-center items-center h-full py-12 md:py-24">
    <div class="flex flex-col h-fit bg-neutral-100 text-neutral-950 rounded-xl border border-purple-400 dark:bg-neutral-800 shadow-2xl dark:text-neutral-50 w-5/6 sm:w-4/6 md:w-3/6">
        <div class="flex flex-row w-full h-12 rounded-t-xl border-b border-neutral-300 text-[10px] font-semibold md:text-base dark:border-neutral-700">
            <a asp-controller="Dashboard" asp-action="Index" asp-route-id="@userId" method="get" class="flex justify-center items-center flex-1 w-full p-2 rounded-tl-xl transition duration-300 hover:bg-neutral-200 dark:hover:bg-neutral-700">
                Main
            </a>
            <a asp-controller="Dashboard" asp-action="Exchanges" asp-route-id="@userId" method="get" class="flex justify-center items-center flex-1 w-full p-2 text-neutral-950 bg-neutral-200 dark:text-neutral-50 dark:bg-neutral-700">
                Exchanges
            </a>
            <a asp-controller="Dashboard" asp-action="WalletTransactions" asp-route-id="@userId" method="get" class="flex justify-center items-center flex-1 w-full p-2 transition duration-300 hover:bg-neutral-200 dark:hover:bg-neutral-700">
                Transactions
            </a>
            <a asp-controller="Dashboard" asp-action="Transfers" asp-route-id="@userId" method="get" class="flex justify-center items-center flex-1 w-full p-2 rounded-tr-xl transition duration-300 hover:bg-neutral-200 dark:hover:bg-neutral-700">
                Transfers
            </a>
        </div>

        <div class="flex flex-col items-center justify-center p-12 gap-4">
            <form asp-controller="Dashboard" asp-action="Transfers" asp-route-id="@userId" method="get" class="w-full h-fit rounded-2xl flex flex-col items-center justify-center gap-4 md:flex-row md:items-end">
                <div class="w-full flex-col justify-start items-start flex">
                    <label class="text-neutral-700 text-sm font-medium dark:text-neutral-400">Sort by</label>

                    <select class="cursor-pointer rounded-full py-1 px-3 w-full bg-neutral-200 dark:bg-neutral-700 dark:text-neutral-50" asp-for="SortBy">
                        <option value="" selected></option>
                        <option value="Amount">Amount</option>
                        <option value="Card">Card</option>
                        <option value="Currency">Currency</option>
                        <option value="Date">Date</option>
                    </select>
                </div>

                <div class="w-full flex-col justify-start items-start flex">
                    <label class="text-neutral-700 text-sm font-medium dark:text-neutral-400">Sort order</label>

                    <select class="cursor-pointer rounded-full py-1 px-3 w-full bg-neutral-200 dark:bg-neutral-700 dark:text-neutral-50" asp-for="SortOrder">
                        <option value="" selected></option>
                        <option value="Descending">Descending</option>
                    </select>
                </div>

                <button type="submit" class="h-fit w-fit py-1 px-4 bg-purple-500 text-center text-base text-neutral-50 rounded-md shadow hover:bg-purple-400 focus:outline-none transition duration-300 md:text-sm">
                    Apply
                </button>
            </form>

            <hr class="w-full my-4 border-neutral-300 dark:border-neutral-600">

            @if (ViewBag.TotalTransfers == 1)
            {
                <span class="px-3 py-1 text-sm border border-purple-400 text-purple-600 bg-purple-100 rounded-full dark:bg-neutral-800 dark:text-purple-400">1 transfer found</span>
            }
            else
            {
                <span class="justify-start px-3 py-1 text-sm border border-purple-400 text-purple-600 bg-purple-100 rounded-full dark:bg-neutral-800 dark:text-purple-400">@(ViewBag.TotalTransfers ?? 0) transfers found</span>
            }

            @if (Model.Transfers.Count > 0)
            {
                <div class="flex flex-col w-56 md:w-full sm:w-80 items-center overflow-x-auto border border-purple-400 rounded-2xl">
                    <table class="block w-56 md:w-full sm:w-80">
                        <thead class="bg-neutral-50 dark:bg-neutral-800">
                            <tr>
                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">From</th>
                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">To</th>
                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">Amount</th>
                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">Currency</th>
                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">Date</th>
                            </tr>
                        </thead>

                        <tbody class="bg-white divide-y divide-neutral-200 dark:divide-neutral-700 dark:bg-neutral-900">
                            @foreach (var transfer in Model.Transfers)
                            {
                                <tr>
                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">
                                        @if (transfer.HasCardSender)
                                        {
                                            @transfer.Card
                                        }
                                        else
                                        {
                                            @transfer.Username
                                        }
                                    </td>

                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">
                                        @if (transfer.HasCardSender)
                                        {
                                            @transfer.Username
                                        }
                                        else
                                        {
                                            @transfer.Card
                                        }
                                    </td>

                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">@transfer.Amount.ToString("0.00")</td>
                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">@transfer.Currency</td>
                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">@transfer.Date</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                @if (ViewData["ErrorMessage"] is not null)
                {
                    <span class="text-red-600 text-base mb-4">
                        @ViewData["ErrorMessage"]
                    </span>
                }
            }

            @if (ViewBag.TotalTransfers > 5)
            {
                <form asp-controller="Dashboard" asp-action="Transfers" asp-route-id="@userId" method="get">
                    <input type="hidden" asp-for="SortBy">
                    <input type="hidden" asp-for="SortOrder">

                    <ul class="list-style-none flex w-fit text-base">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <li>
                                <button type="submit" name="Page" value="@(ViewBag.CurrentPage - 1)" class="relative block rounded bg-transparent px-3 py-1.5 text-neutral-600 transition-all duration-300 hover:bg-purple-400 dark:text-white dark:hover:bg-purple-400 dark:hover:text-white">
                                    Previous
                                </button>
                            </li>
                        }

                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            @if (i == @ViewBag.CurrentPage)
                            {
                                <li class="bg-purple-500 rounded">
                                    <button type="submit" name="Page" value="@i" class="relative block rounded bg-transparent px-3 py-1.5 text-neutral-600 transition-all duration-300  hover:bg-purple-400 dark:text-white dark:hover:bg-purple-400 dark:hover:text-white">
                                        @i
                                    </button>
                                </li>
                            }
                            else
                            {
                                <li>
                                    <button type="submit" name="Page" value="@i" class="relative block rounded bg-transparent px-3 py-1.5 text-neutral-600 transition-all duration-300  hover:bg-purple-400 dark:text-white dark:hover:bg-purple-400 dark:hover:text-white">
                                        @i
                                    </button>
                                </li>
                            }
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <li>
                                <button button type="submit" name="Page" value="@(ViewBag.CurrentPage + 1)" class="relative block rounded bg-transparent px-3 py-1.5 text-neutral-600 transition-all duration-300 hover:bg-purple-400 dark:text-white dark:hover:bg-purple-400 dark:hover:text-white">
                                    Next
                                </button>
                            </li>
                        }
                    </ul>
                </form>
            }
        </div>
    </div>
</div>