@using System.Text;

@model VirtualWallet.Dto.ViewModels.ExchangeViewModel.PaginateExchanges
@{

    int? userId = this.ViewBag.Id;
}
@functions {
    private string BuildQueryString()
    {
        var queryBuilder = new StringBuilder();

        var query = Context.Request.Query;

        // Iterate over the query string parameters and append them to the queryBuilder
        foreach (var param in query)
        {
            if (!string.IsNullOrEmpty(param.Key))
            {
                queryBuilder.Append($"&{param.Key}={param.Value}");
            }
        }

        // Append the filtering and sorting parameters
        queryBuilder.Append($"&Title={ViewBag.Title}&Content={ViewBag.Content}&CreatedBy={ViewBag.CreatedBy}&Tag={ViewBag.Tag}&MinDate={ViewBag.MinDate}&MaxDate={ViewBag.MaxDate}&SortBy={ViewBag.SortBy}&SortOrder={ViewBag.SortOrder}");

        return queryBuilder.ToString();
    }
}

<div class="flex justify-center items-center h-full py-12 md:py-24">
    <div class="flex flex-col h-full bg-neutral-100 text-neutral-950 rounded-xl border border-purple-400 w-5/6 dark:bg-neutral-800 dark:text-neutral-50 lg:w-3/6 sm:w-4/6">

        <div class="flex flex-row w-full h-12 rounded-t-xl border-b border-neutral-300 text-[10px] font-semibold md:text-base dark:border-neutral-700">
            <a asp-controller="Dashboard" asp-action="Index" method="get" class="flex justify-center items-center flex-1 w-full p-2 rounded-tl-xl text-neutral-950 bg-neutral-200 dark:text-neutral-50 dark:bg-neutral-700">
                Main
            </a>
            <a asp-controller="Dashboard" asp-action="Exchanges" method="get" class="flex justify-center items-center flex-1 w-full p-2 transition duration-300 hover:bg-neutral-200 dark:hover:bg-neutral-700">
                Exchanges
            </a>
            <a asp-controller="Dashboard" asp-action="Exchanges" method="get" class="flex justify-center items-center flex-1 w-full p-2 transition duration-300 hover:bg-neutral-200 dark:hover:bg-neutral-700">
                Transactions
            </a>
            <a asp-controller="Dashboard" asp-action="Exchanges" method="get" class="flex justify-center items-center flex-1 w-full p-2 rounded-tr-xl transition duration-300 hover:bg-neutral-200 dark:hover:bg-neutral-700">
                Transfers
            </a>
        </div>

        <div class="flex flex-col items-center justify-center p-8 gap-4">
            <div class="w-4/5 h-12 border border-purple-400 rounded-2xl">
            </div>
            @if (this.Model.Exchanges.Count == 1)
            {
                <span class="px-3 py-1 text-sm border border-purple-400 text-purple-600 bg-purple-100 rounded-full dark:bg-neutral-800 dark:text-purple-400">1 exchange found</span>
            }
            else
            {
                <span class="justify-start px-3 py-1 text-sm border border-purple-400 text-purple-600 bg-purple-100 rounded-full dark:bg-neutral-800 dark:text-purple-400">@(ViewBag.TotalUsers ?? 0) exchanges found</span>
            }

            @if (this.Model.Exchanges.Count > 0)
            {


                <div class="flex flex-col w-full items-center overflow-x-auto border border-purple-400 rounded-2xl inline-block align-middle">
                    <table class="w-full">

                        <thead class="bg-neutral-50 dark:bg-neutral-800">
                            <tr>
                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">From</th>

                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">To</th>

                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">Amount</th>

                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">Rate</th>

                                <th scope="col" class="px-4 py-2 w-1/6 text-sm text-center text-neutral-500 dark:text-neutral-400">Exchanged Amount</th>

                                <th scope="col" class="px-4 py-2 text-sm text-center text-neutral-500 dark:text-neutral-400">Date</th>

                            </tr>
                        </thead>

                        <tbody class="bg-white divide-y divide-neutral-200 dark:divide-neutral-700 dark:bg-neutral-900">
                            @foreach (var ex in Model.Exchanges)
                            {

                                <tr>

                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">@ex.FromCurrency</td>

                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">@ex.ToCurrency</td>

                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">@ex.Amount.ToString("0.00")</td>



                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">@ex.Rate</td>

                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">@ex.ExchangedAmout.ToString("0.00")</td>

                                    <td class="text-center px-4 py-4 text-sm text-neutral-500 dark:text-neutral-300 whitespace-nowrap">@ex.Date</td>


                                </tr>
                            }

                        </tbody>
                    </table>


                </div>
            }
            else
            {
                @if (this.ViewData["ErrorMessage"] is not null)
                {
                    <span class="text-red-600 text-base mb-4">
                        @this.ViewData["ErrorMessage"]
                    </span>
                }

            }

            @* Защо вю бага се казва така? *@
            @if (ViewBag.TotalUsers > 5)
            {
                <ul class="list-style-none flex w-fit text-base">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <li>
                            <a class="relative block rounded bg-transparent px-3 py-1.5 text-neutral-600 transition-all duration-300 hover:bg-purple-400 dark:text-white dark:hover:bg-purple-400 dark:hover:text-white"
                               href="@userId?Page=@(ViewBag.CurrentPage - 1)">Previous</a>
                        </li>
                    }

                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        @if (i == @ViewBag.CurrentPage)
                        {
                            <li class="bg-purple-500 rounded">
                                <a class="relative block rounded bg-transparent px-3 py-1.5 text-neutral-600 transition-all duration-300  hover:bg-purple-400 dark:text-white dark:hover:bg-purple-400 dark:hover:text-white"
                                   href="@userId?Page=@i">
                                    @i
                                </a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a class="relative block rounded bg-transparent px-3 py-1.5 text-neutral-600 transition-all duration-300 hover:bg-purple-400 dark:text-white dark:hover:bg-purple-400 dark:hover:text-white"
                                   href="@userId?Page=@i">
                                    @i
                                </a>
                            </li>
                        }
                    }

                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <li>
                            <a class="relative block rounded bg-transparent px-3 py-1.5 text-neutral-600 transition-all duration-300 hover:bg-purple-400 dark:text-white dark:hover:bg-purple-400 dark:hover:text-white"
                               href="@userId?Page=@(ViewBag.CurrentPage + 1)">Next</a>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
</div>